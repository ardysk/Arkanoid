<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\BrickBreaker.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\BrickBreaker.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Sun Jan 19 21:11:54 2025
<BR><P>
<H3>Maximum Stack Usage =        184 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; show_menu &rArr; start_game &rArr; game_over_display &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[28]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[15]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC0_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[16]">CMP0_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[1f]">DAC0_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[6]">DMA0_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[7]">DMA1_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[8]">DMA2_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[9]">DMA3_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[b]">FTFA_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[e]">I2C0_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[d]">LLW_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[22]">LPTimer_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[c]">LVD_LVW_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[21]">MCG_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[1c]">PIT_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[24]">PORTA_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[25]">PORTB_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[1b]">RTC_Seconds_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[a]">Reserved20_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[f]">Reserved25_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[11]">Reserved27_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[13]">Reserved29_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[14]">Reserved30_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[19]">Reserved35_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[1d]">Reserved39_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[1e]">Reserved40_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[23]">Reserved45_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from menu.o(.text.SysTick_Handler) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_mkl05z4.o(.text.SystemInit) referenced from startup_mkl05z4.o(.text)
 <LI><a href="#[17]">TPM0_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[18]">TPM1_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[20]">TSI0_IRQHandler</a> from tsi.o(.text.TSI0_IRQHandler) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from startup_mkl05z4.o(.text) referenced from startup_mkl05z4.o(RESET)
 <LI><a href="#[27]">__main</a> from __main.o(!!!main) referenced from startup_mkl05z4.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[80]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[81]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2d]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[82]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[31]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[83]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[84]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[85]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[86]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[87]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[88]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[89]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[90]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[91]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[92]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[93]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[94]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[95]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[96]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[97]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[36]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[98]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[99]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[9a]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9b]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2b]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[9f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[30]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a0]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[32]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; show_menu &rArr; start_game &rArr; game_over_display &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[41]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[35]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a2]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[37]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[b]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>LLW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PORTB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Reserved25_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>Reserved27_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>Reserved29_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>Reserved30_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>Reserved35_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>Reserved39_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>Reserved40_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>Reserved45_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TPM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl05z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mkl05z4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[39]"></a>strncpy</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_top_scores
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_uidivmod</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_username
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_idivmod</STRONG> (Thumb, 472 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_number
</UL>

<P><STRONG><a name="[a3]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[3b]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[3a]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[2f]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[34]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ab]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ac]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[6e]"></a>Keyboard_Init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, keyboard.o(.text.Keyboard_Init))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[61]"></a>Keyboard_ReadKey</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, keyboard.o(.text.Keyboard_ReadKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Keyboard_ReadKey
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_for_key_release
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_username
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, menu.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, system_mkl05z4.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>TSI0_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tsi.o(.text.TSI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TSI0_IRQHandler &rArr; change_electrode
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_electrode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl05z4.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TSI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, tsi.o(.text.TSI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TSI_Init &rArr; self_calibration
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_calibration
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[4a]"></a>TSI_ReadSlider</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tsi.o(.text.TSI_ReadSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TSI_ReadSlider
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[4c]"></a>ball_update</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, arkanoid.o(.text.ball_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ball_update &rArr; check_collision
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ball
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_block_collision
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_collision
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ball_after_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[44]"></a>change_electrode</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, tsi.o(.text.change_electrode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = change_electrode
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSI0_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>check_collision</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, arkanoid.o(.text.check_collision))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = check_collision
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_update
</UL>

<P><STRONG><a name="[7e]"></a>check_map_complete</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, arkanoid.o(.text.check_map_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = check_map_complete
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[68]"></a>convert_map</STRONG> (Thumb, 68 bytes, Stack size 28 bytes, arkanoid.o(.text.convert_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = convert_map
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_next_map
</UL>

<P><STRONG><a name="[64]"></a>debounce_delay</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, menu.o(.text.debounce_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = debounce_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_username
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[51]"></a>draw_ball</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, game_draw.o(.text.draw_ball))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = draw_ball &rArr; draw_bitmap &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
</UL>

<P><STRONG><a name="[52]"></a>draw_bitmap</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, oled.o(.text.draw_bitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = draw_bitmap &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_paddle
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_block
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ball
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_digit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[54]"></a>draw_block</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, game_draw.o(.text.draw_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = draw_block &rArr; draw_bitmap &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_blocks
</UL>

<P><STRONG><a name="[55]"></a>draw_blocks</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, game_draw.o(.text.draw_blocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = draw_blocks &rArr; draw_block &rArr; draw_bitmap &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_block
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
</UL>

<P><STRONG><a name="[56]"></a>draw_digit</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, oled.o(.text.draw_digit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = draw_digit &rArr; draw_bitmap &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_number
</UL>

<P><STRONG><a name="[57]"></a>draw_game</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, game_draw.o(.text.draw_game))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = draw_game &rArr; draw_number &rArr; draw_digit &rArr; draw_bitmap &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_paddle
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_blocks
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ball
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_score
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_lives
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_refresh_gram
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_clear_screen
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_number
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_digit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[5b]"></a>draw_number</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, oled.o(.text.draw_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = draw_number &rArr; draw_digit &rArr; draw_bitmap &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
</UL>

<P><STRONG><a name="[5c]"></a>draw_paddle</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, game_draw.o(.text.draw_paddle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = draw_paddle &rArr; draw_bitmap &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
</UL>

<P><STRONG><a name="[60]"></a>enter_username</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, menu.o(.text.enter_username))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = enter_username &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debounce_delay
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyboard_ReadKey
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_refresh_gram
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_string
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_clear_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[65]"></a>game_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, arkanoid.o(.text.game_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = game_init &rArr; load_next_map &rArr; convert_map
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_next_map
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[67]"></a>game_over_display</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, game_draw.o(.text.game_over_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = game_over_display &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_score
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_refresh_gram
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_string
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_clear_screen
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_number
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[59]"></a>get_lives</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, arkanoid.o(.text.get_lives))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
</UL>

<P><STRONG><a name="[5a]"></a>get_score</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, arkanoid.o(.text.get_score))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
</UL>

<P><STRONG><a name="[75]"></a>get_top_scores</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scores.o(.text.get_top_scores))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
</UL>

<P><STRONG><a name="[7d]"></a>gpio_set_high</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gpio.o(.text.gpio_set_high))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_write_byte
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
</UL>

<P><STRONG><a name="[7c]"></a>gpio_set_low</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gpio.o(.text.gpio_set_low))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_write_byte
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
</UL>

<P><STRONG><a name="[7b]"></a>gpio_set_output</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gpio.o(.text.gpio_set_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_set_output
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
</UL>

<P><STRONG><a name="[50]"></a>handle_block_collision</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, arkanoid.o(.text.handle_block_collision))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_update
</UL>

<P><STRONG><a name="[66]"></a>load_next_map</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, arkanoid.o(.text.load_next_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = load_next_map &rArr; convert_map
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_map
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_init
</UL>

<P><STRONG><a name="[33]"></a>main</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; show_menu &rArr; start_game &rArr; game_over_display &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6a]"></a>paddle_update</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arkanoid.o(.text.paddle_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = paddle_update
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[4d]"></a>reset_ball</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, arkanoid.o(.text.reset_ball))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_update
</UL>

<P><STRONG><a name="[49]"></a>self_calibration</STRONG> (Thumb, 152 bytes, Stack size 36 bytes, tsi.o(.text.self_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = self_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSI_Init
</UL>

<P><STRONG><a name="[6b]"></a>setup_systick</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, menu.o(.text.setup_systick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setup_systick &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[69]"></a>show_menu</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, menu.o(.text.show_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = show_menu &rArr; start_game &rArr; game_over_display &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_for_key_release
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_systick
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_username
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debounce_delay
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyboard_ReadKey
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyboard_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSI_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_refresh_gram
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_string
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_clear_screen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>show_oled_options</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, menu.o(.text.show_oled_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = show_oled_options &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_for_key_release
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debounce_delay
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyboard_ReadKey
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_write_byte
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_set_framerate
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_refresh_gram
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_string
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_clear_screen
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_digit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[71]"></a>show_score_board</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, menu.o(.text.show_score_board))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = show_score_board &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_for_key_release
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debounce_delay
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyboard_ReadKey
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_top_scores
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_refresh_gram
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_string
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_clear_screen
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_number
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[6c]"></a>spi_init</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, spi.o(.text.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[76]"></a>spi_master_write</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, spi.o(.text.spi_master_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_master_write
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_writeable
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_readable
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_write_byte
</UL>

<P><STRONG><a name="[58]"></a>ssd1306_clear_screen</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, oled.o(.text.ssd1306_clear_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ssd1306_clear_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_username
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_string
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_startup_message
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[79]"></a>ssd1306_display_char</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, oled.o(.text.ssd1306_display_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_string
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_startup_message
</UL>

<P><STRONG><a name="[7a]"></a>ssd1306_display_startup_message</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, oled.o(.text.ssd1306_display_startup_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ssd1306_display_startup_message &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_refresh_gram
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_string
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_char
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_clear_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
</UL>

<P><STRONG><a name="[63]"></a>ssd1306_display_string</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, oled.o(.text.ssd1306_display_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_char
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_clear_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_username
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over_display
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_startup_message
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[53]"></a>ssd1306_draw_point</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, oled.o(.text.ssd1306_draw_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ssd1306_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_char
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>

<P><STRONG><a name="[6d]"></a>ssd1306_init</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, oled.o(.text.ssd1306_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ssd1306_init &rArr; ssd1306_display_startup_message &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_write_byte
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_startup_message
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_clear_screen
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_output
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_low
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_high
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[5d]"></a>ssd1306_refresh_gram</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, oled.o(.text.ssd1306_refresh_gram))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ssd1306_refresh_gram &rArr; ssd1306_write_byte &rArr; spi_master_write
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_username
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_display_startup_message
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[74]"></a>ssd1306_set_framerate</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, oled.o(.text.ssd1306_set_framerate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ssd1306_set_framerate &rArr; ssd1306_write_byte &rArr; spi_master_write
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
</UL>

<P><STRONG><a name="[73]"></a>ssd1306_write_byte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, oled.o(.text.ssd1306_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ssd1306_write_byte &rArr; spi_master_write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_write
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_low
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_high
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_set_framerate
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_refresh_gram
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_init
</UL>

<P><STRONG><a name="[70]"></a>start_game</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, game.o(.text.start_game))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = start_game &rArr; game_over_display &rArr; ssd1306_display_string &rArr; ssd1306_display_char &rArr; ssd1306_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_game
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_top_scores
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ball
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paddle_update
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_next_map
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_score
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_map_complete
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_update
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSI_ReadSlider
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[7f]"></a>update_top_scores</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, scores.o(.text.update_top_scores))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = update_top_scores &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[6f]"></a>wait_for_key_release</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, menu.o(.text.wait_for_key_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wait_for_key_release &rArr; Keyboard_ReadKey
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyboard_ReadKey
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_uidiv</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text_divfast))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_score_board
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_oled_options
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_systick
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paddle_update
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSI_ReadSlider
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_menu
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_idiv</STRONG> (Thumb, 434 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text_divfast))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_number
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[78]"></a>spi_readable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, spi.o(.text.spi_readable))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_write
</UL>

<P><STRONG><a name="[77]"></a>spi_writeable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, spi.o(.text.spi_writeable))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_write
</UL>

<P><STRONG><a name="[47]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tsi.o(.text.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSI_Init
</UL>

<P><STRONG><a name="[48]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tsi.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSI_Init
</UL>

<P><STRONG><a name="[46]"></a>__NVIC_SetPriority</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tsi.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSI_Init
</UL>

<P><STRONG><a name="[4e]"></a>start_ball_after_delay</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, arkanoid.o(.text.start_ball_after_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = start_ball_after_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_update
</UL>

<P><STRONG><a name="[42]"></a>SysTick_Config</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, menu.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_systick
</UL>

<P><STRONG><a name="[43]"></a>__NVIC_SetPriority</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, menu.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[40]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
